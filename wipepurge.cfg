[gcode_macro DECONTAMINATE]
; Takes the following arguments:
; WIPE=x    Number of times to wipe (defaults to zero)
; PURGE=x   mm of filament to purge (defaults to zero)
variable_brush_start: 75
variable_brush_width: 52
variable_brush_depth: 5  ; Amount *reachable* from max Y
variable_bucket_left_width: 92
variable_bucket_right_width: 40
variable_bucket_gap: 22
variable_brush_top: 10
variable_clearance_z: 5
variable_prep_spd_xy: 3000	         ; Travel (not cleaning) speed along x and y-axis in mm/min.
variable_prep_spd_z: 1500                ; Travel (not cleaning) speed along z axis in mm/min.
variable_purge_len: 15                   ; Amount of filament, in mm, to purge.
variable_purge_spd: 150                  ; Speed, in mm/min, of the purge.
variable_purge_ret: 0.75                 ; Retract length, in mm, after purging to prevent
                                         ; slight oozing. Adjust as necessary.
variable_ooze_dwell: 2                   ; Dwell/wait time, in seconds, after purging and retracting.
variable_wipe_spd_xy: 5000	         ; Nozzle wipe speed in mm/min.

gcode:
  {% set PURGE_LEN = params.PURGE|default(0)|float %}
  {% set WIPE_COUNT = params.WIPE|default(0)|float %}

  SAVE_GCODE_STATE NAME=DECONTAMINATE
  M83      ; relative extrusion mode
  G90      ; absolute position mode
  
  {% set y_rear = printer.configfile.config["stepper_y"]["position_max"]|float %}
  ; Move to clearance Z
  G0 Z{brush_top + clearance_z} F{prep_spd_z}
  ; First, purge.
  {% if PURGE_LEN > 0 %}
    G0 Y{y_rear} F{prep_spd_xy}
    ; Select a bucket randomly based on size (ie: more in the left bucket)
    {% set bucket = range(variable_bucket_left_width + variable_bucket_right_width)|random %}
    {% if bucket < variable_bucket_left_width %}
      G0 X{bucket_start + (bucket_left_width / 2)} F{prep_spd_xy}
    {% else %}
      G0 X{bucket_start + bucket_left_width + bucket_gap + (bucket_right_width / 2)} F{prep_spd_xy}
    {% endif %}
    {% if printer.extruder.temperature >= purge_temp_min %}
      G1 E{purge_len} F{purge_spd}
      G1 E-{purge_ret} F{purge_spd * 5}
      G4 P{ooze_dwell * 1000}
    {% endif %}
  {% endif %}

  ; Now wipe
  ; We want start start in a random direction and move to a random position
  ; on the other side of the brush.
  {% if WIPE_COUNT > 0 %}
    {% set x_pos = brush_start + brush_width * range(0, 1)|random %}
    {% set y_pos = y_rear - range(0, brush_depth)|random %}
    G0 X{x_pos} Y{y_pos} F{prep_spd_xy}
    G0 Z{brush_top} F{prep_spd_z}
    {% for wipes in range(0, (WIPE_COUNT)) %}
      {% if x_pos > brush_start + brush_width / 2 %}
        x_pos = brush_start
      {% else %}
        x_pos = brush_start + brush_width
      {% endif %}
      {% set y_pos = y_rear - range(0, brush_depth)|random %}
      G0 X{x_pos} Y{y_pos} F{wipe_spd_xy}
    {% endfor %}
  {% endif %}
  RESTORE_GCODE_STATE NAME=DECONTAMINATE

